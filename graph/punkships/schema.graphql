type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Contract @entity(immutable: true) {
  id: Bytes!
  name: String!
  symbol: String!
  owners: [Account!]! @derivedFrom(field: "contract")
  tokens: [Token!]! @derivedFrom(field: "contract")
}

type Account @entity(immutable: true) {
  id: Bytes!
  contract: Contract!
  punkships: [Token!]! @derivedFrom(field: "owner")
}

type Token
  @entity(immutable: false) {
  contract: Contract!
  id: Bytes!
  tokenId: BigInt!
  owner: Account!
  approved: Account
  tokenURI: String!
  attributes: [Attribute!]! @derivedFrom(field: "token")
  image: String
  burned: Boolean! 
}

type Attribute @entity(immutable: true) {
  id: Bytes!
  trait: String!
  value: String!
  token: Token!
}
