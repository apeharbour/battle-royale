# Manuelly created objects
type Game @entity {
  id: Bytes!
  gameId: BigInt
  radius: Int
  centerQ: Int
  centerR: Int
  currentRound: Round!
  state: GameState!
  winner: Player
  players: [Player!]! @derivedFrom(field: "game")
  rounds: [Round!]! @derivedFrom(field: "game")
  cells: [Cell!]! @derivedFrom(field: "game")
}

type Player @entity {
  id: Bytes!
  address: Bytes!
  q: Int!
  r: Int!
  tokenId: BigInt!
  range: Int!
  shotRange: Int!
  image: String!
  game: Game!
  state: PlayerState!
  kills: Int
}

type Round @entity {
  game: Game
  id: Bytes!
  round: BigInt!
  radius: Int!
  shrunk: Boolean!
  moves: [Move!]! @derivedFrom(field: "round")
}

type Move @entity {
  id: Bytes!
  game: Game!
  round: Round!
  player: Player!
  commitment: Bytes
  travel: Travel
  shot: Shot
}

type Travel @entity {
  id: Bytes!
  originQ: Int!
  originR: Int!
  destinationQ: Int!
  destinationR: Int!
}

type Shot @entity {
  id: Bytes!
  originQ: Int!
  originR: Int!
  destinationQ: Int!
  destinationR: Int!
}

type Cell @entity(immutable: true) {
  id: Bytes!
  game: Game!
  q: Int!
  r: Int!
  island: Boolean!
}

enum PlayerState {
  active
  dropped
  beached
  crashed
  shot
  draw
  won
}

enum GameState {
  registering
  active
  finished
}